[build-system]
requires = [
    "setuptools>=64",
    "setuptools_scm>=8",
    "extension-helpers",
    "numpy>=2.0.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "ligo.skymap"
dynamic = ["version"]
authors = [{name = "Leo Singer", email = "leo.singer@ligo.org"}]
license = {text = "GPL-3.0-or-later"}
description = "Tools for reading, writing, manipulating, and making LIGO/Virgo/KAGRA sky maps"
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Operating System :: MacOS",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Programming Language :: C",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.10"
dependencies = [
    "astroplan>=0.7",  # https://github.com/astropy/astroplan/issues/479
    "astropy>=6.0",  # https://github.com/astropy/astropy/pull/14980
    "astropy-healpix>=0.3",  # https://github.com/astropy/astropy-healpix/pull/106
    "healpy",
    "h5py",
    "lalsuite>=6.82, !=7.2",
    "ligo-gracedb>=2.0.1",
    "ligo-segments>=1.2.0",
    "matplotlib>=3.9.1",  # https://github.com/matplotlib/matplotlib/pull/28289
    "networkx",
    "numpy>=1.23.0",
    "pillow>=2.5.0",
    "ptemcee",
    "python-ligo-lw>=1.8.0",
    "pytz",
    "reproject>=0.3.2",
    "scipy>=0.14, !=1.10.0",  # https://git.ligo.org/lscsoft/ligo.skymap/-/issues/36
    "shapely>=2.0.0",
    "tqdm>=4.27.0",
]

[project.optional-dependencies]
test = [
    "astroquery",
    "figaro>=1.7.8 ; python_version < \"3.13\"",
    "pytest-astropy",
    "pytest-benchmark",
    "pytest-mpl",
    "pytest-rerunfailures",
]
docs = [
    "sphinx >= 4.0",
    "sphinx-argparse >= 0.3.0",  # https://github.com/alex-rudakov/sphinx-argparse/pull/126
    "sphinx-astropy",
    "sphinxcontrib-mermaid >= 0.7.1",  # https://github.com/mgaitan/sphinxcontrib-mermaid/issues/72
    "tomli >= 1.1.0 ; python_version < \"3.11\"",
]
dpgmm = [
    "figaro>=1.7.8"
]

[project.urls]
homepage = "https://lscsoft.docs.ligo.org/ligo.skymap/"
"Bug Tracker" = "https://git.ligo.org/lscsoft/ligo.skymap/issues"
"Change Log" = "https://lscsoft.docs.ligo.org/ligo.skymap/changes.html"
"Documentation" = "https://lscsoft.docs.ligo.org/ligo.skymap"
"GitHub" = "https://github.com/lpsinger/ligo.skymap"
"Source Code" = "https://git.ligo.org/lscsoft/ligo.skymap"

[project.scripts]
bayestar-inject = "ligo.skymap.tool.bayestar_inject:main"
bayestar-localize-coincs = "ligo.skymap.tool.bayestar_localize_coincs:main"
bayestar-localize-lvalert = "ligo.skymap.tool.bayestar_localize_lvalert:main"
bayestar-mcmc = "ligo.skymap.tool.bayestar_mcmc:main"
bayestar-realize-coincs = "ligo.skymap.tool.bayestar_realize_coincs:main"
bayestar-sample-model-psd = "ligo.skymap.tool.bayestar_sample_model_psd:main"
ligo-skymap-combine = "ligo.skymap.tool.ligo_skymap_combine:main"
ligo-skymap-contour = "ligo.skymap.tool.ligo_skymap_contour:main"
ligo-skymap-contour-moc = "ligo.skymap.tool.ligo_skymap_contour_moc:main"
ligo-skymap-flatten = "ligo.skymap.tool.ligo_skymap_flatten:main"
ligo-skymap-unflatten = "ligo.skymap.tool.ligo_skymap_unflatten:main"
ligo-skymap-from-samples = "ligo.skymap.tool.ligo_skymap_from_samples:main"
ligo-skymap-constellations = "ligo.skymap.tool.ligo_skymap_constellations:main"
ligo-skymap-plot = "ligo.skymap.tool.ligo_skymap_plot:main"
ligo-skymap-plot-airmass = "ligo.skymap.tool.ligo_skymap_plot_airmass:main"
ligo-skymap-plot-coherence = "ligo.skymap.tool.ligo_skymap_plot_coherence:main"
ligo-skymap-plot-observability = "ligo.skymap.tool.ligo_skymap_plot_observability:main"
ligo-skymap-plot-pp-samples = "ligo.skymap.tool.ligo_skymap_plot_pp_samples:main"
ligo-skymap-plot-stats = "ligo.skymap.tool.ligo_skymap_plot_stats:main"
ligo-skymap-plot-volume = "ligo.skymap.tool.ligo_skymap_plot_volume:main"
ligo-skymap-stats = "ligo.skymap.tool.ligo_skymap_stats:main"

[project.entry-points.pytest11]
omp-get-num-threads = "ligo.skymap.tests.plugins.omp"

[tool.setuptools.packages.find]
include = ["ligo.*"]

[tool.setuptools.package-data]
"ligo.skymap.io.tests" = ["data/*.hdf5", "data/*.xml.gz", "data/gstlal_reference_psd/*.xml.gz"]
"ligo.skymap.plot" = ["*.csv", "*.json"]
"ligo.skymap.plot.tests" = ["baseline/*.png"]

[tool.pytest.ini_options]
testpaths = "ligo/skymap"
astropy_header = true
doctest_plus = "enabled"
doctest_ufunc = "enabled"
omp_get_num_threads = true
filterwarnings = [
    "error:unclosed file:ResourceWarning",
    "error::pytest.PytestUnraisableExceptionWarning",
]

[tool.coverage.run]
source = ["{packagename}"]
omit = [
    "ligo/skymap/conftest.py",
    "ligo/skymap/extern/*",
    "ligo/skymap/tests/*",
    "ligo/skymap/*/tests/*",
    "ligo/skymap/*/*/tests/*",
    "ligo/skymap/version*",
    "ligo/skymap/plot/cylon.py",  # only used for generating color map
    "*/ligo/skymap/conftest.py",
    "*/ligo/skymap/extern/*",
    "*/ligo/skymap/tests/*",
    "*/ligo/skymap/*/tests/*",
    "*/ligo/skymap/*/*/tests/*",
    "*/ligo/skymap/version*",
    "*/ligo/skymap/plot/cylon.py",  # only used for generating color map
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about packages we have installed
    "except ImportError",
    # Don't complain if tests don't hit assertions
    "raise AssertionError",
    "raise NotImplementedError",
    # Ignore branches that don't pertain to this version of Python
    "pragma: py{ignore_python_version}",
    # Don't complain about IPython completion helper
    "def _ipython_key_completions_",
]
